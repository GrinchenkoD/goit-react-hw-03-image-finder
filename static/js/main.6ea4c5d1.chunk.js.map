{"version":3,"sources":["components/searchbar/Searchbar.jsx","components/imageGalleryItem/ImageGalleryItem.jsx","components/imageGallery/ImageGallery.jsx","components/button/Button.jsx","components/loader/Loader.jsx","components/modal/Modal.jsx","App.jsx","index.js"],"names":["initialState","query","Searchbar","state","handleChange","event","value","target","setState","prevState","handleSubmit","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","largeImageURL","openModal","src","alt","data-url","onClick","url","dataset","ImageGallery","pictures","map","picture","id","Button","loadMore","Loader","Modal","handleBackdrop","onClose","handleKeyDown","code","window","addEventListener","removeEventListener","modalUrl","App","searchQuery","loading","page","modalOpen","a","fetchQuery","axios","get","then","data","hits","catch","error","console","log","finally","handleToggleModal","_prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6ea4c5d1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst initialState = {\r\n    query: \"\",\r\n}\r\nexport default class Searchbar extends Component {\r\n\r\n    state = {\r\n        ...initialState\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { value } = event.target;\r\n        this.setState((prevState) => ({ ...prevState, query: value }))\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { query } = this.state;\r\n\r\n        this.props.onSubmit(query)\r\n\r\n        this.setState({ ...initialState })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { query } = this.state\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.handleChange}\r\n                        value={query}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nfunction ImageGalleryItem({ webformatURL, largeImageURL, openModal }) {\r\n    const handleClick = (event) => {\r\n        const { url } = event.target.dataset\r\n        openModal(url)\r\n    }\r\n\r\n    return (\r\n        <li className=\"ImageGalleryItem\">\r\n            <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\"\r\n                data-url={largeImageURL} onClick={handleClick} />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ImageGalleryItem\r\n","import React, { Component } from 'react'\r\n\r\nimport ImageGalleryItem from '../imageGalleryItem/ImageGalleryItem'\r\n\r\n\r\nexport default class ImageGallery extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"ImageGallery\">\r\n                {this.props.pictures.map(picture => {\r\n                    const { id, webformatURL, largeImageURL } = picture\r\n                    return <ImageGalleryItem key={id} webformatURL={webformatURL}\r\n                        largeImageURL={largeImageURL} openModal={this.props.openModal} />\r\n                })}\r\n\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nfunction Button({ loadMore }) {\r\n    return (\r\n        <div className=\"btn-container\">\r\n            <button type=\"button\" className=\"Button\" onClick={loadMore}>Load more</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"spinner-container\">\r\n            <div className=\"lds-spinner\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Modal extends Component {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n        window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n    handleBackdrop = (event) => {\r\n        this.props.onClose()\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        if (event.code === \"Escape\") {\r\n\r\n            this.props.onClose && this.props.onClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Overlay\" onClick={this.handleBackdrop}>\r\n                <div className=\"Modal\">\r\n                    <img src={this.props.modalUrl} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n","\nimport Searchbar from './components/searchbar';\nimport React, { Component } from 'react'\nimport ImageGallery from './components/imageGallery';\nimport Button from './components/button';\nimport Loader from './components/loader';\n\nimport axios from \"axios\"\nimport Modal from './components/modal';\n\nexport default class App extends Component {\n\n  state = {\n    pictures: [],\n    searchQuery: '',\n    loading: false,\n    page: 1,\n    modalOpen: false,\n    modalUrl: '',\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.page !== this.state.page && prevState.page !== 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  onSubmit = async (query) => {\n    await this.setState({ pictures: [], searchQuery: query, loading: true, page: 1 })\n\n    this.fetchQuery()\n\n  }\n\n  fetchQuery = () => {\n    const url = `https://pixabay.com/api/?q=${this.state.searchQuery}&page=${this.state.page}\n    &key=20201719-2c6bddc3b6de2ae59c417e3e6&image_type=photo&orientation=horizontal&per_page=12`\n\n    axios\n      .get(url)\n      .then(data => {\n\n        this.setState((prevState) => ({ pictures: [...prevState.pictures, ...data.data.hits], page: prevState.page + 1 }))\n      })\n      .catch(error => { console.log(error) })\n      .finally(() => this.setState({ loading: false }))\n  }\n\n  loadMore = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n    this.fetchQuery()\n\n  }\n\n  openModal = (url) => {\n    this.handleToggleModal()\n    this.setState({ modalUrl: url })\n  }\n\n  handleToggleModal = () => {\n    this.setState((prevState) => ({ modalOpen: !prevState.modalOpen }));\n  };\n\n  render() {\n    const { loading, pictures, modalOpen, modalUrl } = this.state\n\n\n    return (\n      <>\n        <Searchbar onSubmit={this.onSubmit} />\n        {!!pictures.length && <ImageGallery pictures={pictures} openModal={this.openModal} />}\n        {loading && < Loader />}\n        { !!pictures.length && <Button loadMore={this.loadMore} />}\n        {modalOpen && <Modal onClose={this.handleToggleModal} modalUrl={modalUrl} />}\n      </>\n\n    )\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}